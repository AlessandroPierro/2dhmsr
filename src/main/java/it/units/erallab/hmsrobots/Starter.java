/*
 * Copyright (C) 2021 Eric Medvet <eric.medvet@gmail.com> (as Eric Medvet <eric.medvet@gmail.com>)
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package it.units.erallab.hmsrobots;

import it.units.erallab.hmsrobots.core.controllers.*;
import it.units.erallab.hmsrobots.core.geometry.BoundingBox;
import it.units.erallab.hmsrobots.core.objects.ControllableVoxel;
import it.units.erallab.hmsrobots.core.objects.Robot;
import it.units.erallab.hmsrobots.core.objects.SensingVoxel;
import it.units.erallab.hmsrobots.core.objects.Voxel;
import it.units.erallab.hmsrobots.core.sensors.Angle;
import it.units.erallab.hmsrobots.core.sensors.Lidar;
import it.units.erallab.hmsrobots.core.sensors.Trend;
import it.units.erallab.hmsrobots.core.sensors.Velocity;
import it.units.erallab.hmsrobots.core.snapshots.MLPState;
import it.units.erallab.hmsrobots.core.snapshots.StackedScopedReadings;
import it.units.erallab.hmsrobots.tasks.locomotion.Locomotion;
import it.units.erallab.hmsrobots.tasks.locomotion.Outcome;
import it.units.erallab.hmsrobots.util.Grid;
import it.units.erallab.hmsrobots.util.RobotUtils;
import it.units.erallab.hmsrobots.util.SerializationUtils;
import it.units.erallab.hmsrobots.viewers.FramesImageBuilder;
import it.units.erallab.hmsrobots.viewers.GridFileWriter;
import it.units.erallab.hmsrobots.viewers.GridOnlineViewer;
import it.units.erallab.hmsrobots.viewers.VideoUtils;
import it.units.erallab.hmsrobots.viewers.drawers.*;
import org.apache.commons.lang3.tuple.Pair;
import org.dyn4j.dynamics.Settings;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.*;
import java.util.function.Function;
import java.util.stream.IntStream;

/**
 * @author Eric Medvet <eric.medvet@gmail.com>
 */
public class Starter {

    private static void sampleExecution() throws IOException {
        final Locomotion locomotion = new Locomotion(
                20,
                Locomotion.createTerrain("flat"),
                new Settings()
        );
        final ControllableVoxel hardMaterialVoxel = new ControllableVoxel(
                Voxel.SIDE_LENGTH,
                Voxel.MASS_SIDE_LENGTH_RATIO,
                50d,
                Voxel.SPRING_D,
                Voxel.MASS_LINEAR_DAMPING,
                Voxel.MASS_ANGULAR_DAMPING,
                Voxel.FRICTION,
                Voxel.RESTITUTION,
                Voxel.MASS,
                Voxel.LIMIT_CONTRACTION_FLAG,
                Voxel.MASS_COLLISION_FLAG,
                Voxel.AREA_RATIO_MAX_DELTA,
                Voxel.SPRING_SCAFFOLDINGS,
                ControllableVoxel.MAX_FORCE,
                ControllableVoxel.ForceMethod.DISTANCE
        );
        final ControllableVoxel softMaterialVoxel = new ControllableVoxel(
                Voxel.SIDE_LENGTH,
                Voxel.MASS_SIDE_LENGTH_RATIO,
                5d,
                Voxel.SPRING_D,
                Voxel.MASS_LINEAR_DAMPING,
                Voxel.MASS_ANGULAR_DAMPING,
                Voxel.FRICTION,
                Voxel.RESTITUTION,
                Voxel.MASS,
                Voxel.LIMIT_CONTRACTION_FLAG,
                Voxel.MASS_COLLISION_FLAG,
                Voxel.AREA_RATIO_MAX_DELTA,
                EnumSet.of(Voxel.SpringScaffolding.SIDE_EXTERNAL, Voxel.SpringScaffolding.CENTRAL_CROSS),
                ControllableVoxel.MAX_FORCE,
                ControllableVoxel.ForceMethod.DISTANCE
        );
        int w = 20;
        int h = 5;
        Robot<ControllableVoxel> robot = new Robot<>(
                new TimeFunctions(Grid.create(
                        w, h,
                        (x, y) -> (Double t) -> Math.sin(-2 * Math.PI * t + Math.PI * ((double) x / (double) w))
                )),
                Grid.create(
                        w, h,
                        (x, y) -> (y == 0) ? SerializationUtils.clone(hardMaterialVoxel) : SerializationUtils.clone(softMaterialVoxel)
                )
        );
        FramesImageBuilder framesImageBuilder = new FramesImageBuilder(
                5, 5.5, 0.1, 300, 200, FramesImageBuilder.Direction.HORIZONTAL, Drawers.basic()
        );
        Outcome result = locomotion.apply(robot, framesImageBuilder);
        BufferedImage image = framesImageBuilder.getImage();
        System.out.println("Outcome: " + result);
    }

    public static void main(String[] args) {
        bipeds();
        //rollingOne();
        //rollingBall();
        //breakingWorm();
        //plainWorm();
        //cShaped();
        //multiped();
    }

    private static void bipeds() {
        Pyworker tt = new Pyworker("hilly-3-30-0","biped-4x3","high_biped-0.01-f","MLP-1-1-tanh", 60);
        tt.getRobotSerialized(new double[]{71.67941745068977, 38.289235690766056, -28.14296849697019, 85.4533803764378, 171.52982942333128, -91.47543319279764, 63.24410714052124, 54.63646978827029, -23.185505554618956, -80.5372353841723, 25.3711800399159, -3.7643202545872123, -70.96514498758745, 29.01926060910034, 257.9054622208454, -101.06505681672816, 19.188804649859478, 148.9430895929627, -99.22960105123882, 116.706922492255, 139.80104182064431, 56.17869750061835, -54.358617112795706, -119.24791787016025, 331.7937839109595, 72.7304691549049, 339.47176408656975, -92.89426693682202, 82.34019885020315, 29.904366693468607, 6.265680056215471, -129.31161843321163, -66.78184006470838, 119.31300165579091, -229.12773858498574, -115.05788213955422, -187.05854687159743, -71.01212317177644, -135.38452653909312, -15.554597717420496, -64.86227702550298, -314.19258345428057, -110.66588936728597, 15.346064105943995, 118.29141607334442, 104.83800713887838, 164.4898292679191, 40.18764785934042, 10.953167014016605, -40.55234207833322, -77.63269472479966, -144.8662228406496, -19.44979495479097, 63.22691174064328, 107.09898319900009, -185.92302053214874, 83.46598969062075, -169.19576503971732, -147.54722837988453, -168.86813340730362, -14.872567649150982, -214.96764840180393, 58.03098789464362, 77.45013366285963, -107.07277990772573, 94.28024188739383, -30.999126198121147, -230.9053696453002, -11.379711494712565, -30.33511766181934, -170.26065494049894, -25.296672835764383, 289.43152084940914, -224.25834520838364, 112.93607491007116, 258.57054584531824, -22.194144457411177, 163.72266722817687, -74.62612969271592, 92.95964743073091, -87.33209687228512, 138.29134609237678, -120.5401603851674, 27.73569714099645, 102.59273958519707, 2.786193922745532, -3.7094665728027216, 29.89520437635081, -194.74420312886218, 43.560438754989605, 177.9473893437276, -128.1451876437233, -220.3532914622674, 174.4956742662952, -18.989372381692355, 178.4908850513291, 68.43694544597658, -207.12008686953402, 167.00457644621892, -81.21878054518376, -53.7471397504365, 12.085402528331674, 72.52265065977772, 122.49790650187063, 80.37816111921978, -50.38572011345305, -172.6535089265544, -82.60993858074006, -23.66683405573162, -3.969343048076282, -159.74988860117, 81.0045029671815, -15.712392040898113, -82.5846955835338, 193.43911445736865, 10.535477114961756, 92.91546883649598, -212.55987042099258, 121.66934165285494, -21.23166876481118, -97.48712288345142, 195.85679512318666, 273.0966993469607, -32.716888461572516, -123.10034177847868, -103.10262625556003, 43.05888854737978, -274.45751240942406, -42.49401746312742, 208.04161931625404, 114.29875789995702, 224.2889142095296, -167.5561481208637, 180.7576246417053, -256.6846566910865, -59.662977375225374, 182.99454790448075, 39.22963281973244, -150.45167334494542, -0.43054320496705545, -138.0667038534065, -30.158971330477772, -91.44221213602265, -51.47702707039416, -139.44332279085504, -1.5299363816160085, 75.55406520257425, -83.23027711440074, -94.91928334682065, -16.098716335206017, -54.594827505834616, -33.53778836932859, -95.00913907087062, 85.28000578782311, -33.66838340811021, 67.65506309045438, 78.87926399458104, -103.80727409041266, 14.243174223677183, 272.7277473933904, -18.953989845313394, 38.49915139226966, 381.23274640360876, 25.782680475163055, -192.18530815125396, -212.59959380495272, 52.337182425021176, 219.77929501559356, -171.6171888139497, -113.3236988633935, 221.325527031937, -16.97470698086957, -133.59350972792322, -9.324206909252235, -68.46750024712624, 275.3723428741371, -239.154611133603, 19.230106227956423, 80.24140923691047, -80.16287689457496, 364.11743707619337, -19.133241786925986, -277.58479575286066, -89.84797858015793, 65.08361716587957, 31.123073909012014, -142.75423952656485, -112.45126425907607, 267.53496908648196, -59.89964400488426, 250.98999249152627, 280.0141863478147, -145.23090405284478, -478.7548566185382, 51.44892470433461, 178.2198528409266, 224.88791097034755, 215.17523223797338, -125.42404589432614, -80.12509268233406, -68.44276777310155, 118.17669107813872, -174.9487179315719, 64.0915661681639, -86.57653875683827, 212.07873961170026, -28.14713814519083, -47.099197346647294, 114.48795074512807, -113.73644256517939, -52.756833980576175, -17.615679669740885, -163.24523727473283, 50.87509688646387, -187.8145375969136, -28.58606060841471, 2.444166492093658, 48.86357914508898, 55.43551589547525, -31.93371871039213, -266.098348753814, 49.539992936185286, 48.88453684372045, -22.088704196483643, -37.04757417062568, 56.356969956049056, -86.97165128351253, -99.67194935405321, 105.94071606356924, -34.600031653098306, 84.42883310526508, 6.756653342310151, 9.39545538240087, -23.05173982917973, 36.79024649396805, -33.73235907180435, -97.3620246466837, -131.72449981138948, 103.60559643394423, 30.679025591537467, 152.8260034039286, -25.213853069275775, 100.97158539803762, 155.74453904735495, 138.65466812705682, -71.09916796577251, 55.72059275811549, -127.33699797749047, 152.4812963954077, 122.24965096096345, 63.01060561178448, -127.76781083299696, 224.1488661421241, -104.32634368928153, -8.752323062932065, 41.61709566753223, 64.53293049259813, 189.61096809677178, -86.88852332276252, -385.1815683078049, -47.53215175017545, -238.96602723158495, -139.43146844195726, 17.668149897249258, 1.198959366284407, -148.79673391251842, 239.23609948154507, -44.069787916745405, 79.88580196498596, 142.56756012888383, 169.72868522410235, 158.24589879675875, -32.9635853737887, 69.16679651555775, -11.114188136268313, 79.13035104839594, -59.720711525807424, -42.00155061593166, -9.366371271868898, -228.95741524135505, 84.32941656071115, 189.03958893482044, -67.23633165245614, 192.43504121480964, 83.19472812863721, -35.08229227975792, -14.878536517980223, -38.48067359171863, -60.764286342790136, -8.085362826174206, -44.65460625636943, 180.5010892192573, -37.85719632917322, -11.42874345697241, -24.187410978121644, -71.10870447542365, 51.6879663938149, 14.21431741318516, -149.76576113737758, -129.72807321518408, -178.2570103590712, -77.65925853257805, 41.751360596248894, 14.465213877615833, -115.47093317587938, -106.33770004005015, -125.37318940632426, 254.17705681450337, 96.39556644565033, -7.101493460539247, 123.08553227090356, -113.07985678165089, -93.93881072430503, -3.532884952237338, -50.88185935847021, 196.2792761579235, -28.645315022182363, -137.577030371186, -6.300972711335471, 90.57956945220303, 103.52995248435249, 4.36046045611178, -155.38530561848154, 106.66243795589448, -288.38051989577514, 144.3311465800174, 15.624099680736624, 76.5889243573137, 255.8226680189228, -287.34890802278704, -439.8528776669761, 202.0974389976181, -40.7196497471201, 162.84877610546732, -181.47239181373152, 236.14082638306925, 71.80085151838445, -179.7263592664841, 137.05412980214916, -72.88090616644809, 54.101114760949265, -7.011412283271535, 129.60444355213136, 130.83222079268012, -39.4431787268788, -71.23278927532758, 121.7330002308324, 136.57966230933255, -184.263092645853, 39.815285599998454, -273.7100216222604, -71.22759338684237, 12.894171044272253, 22.424110795139, -43.22012300573399, 67.83096036750509, -52.4845261328225, -114.41460961541276, 56.3589503270471, -210.7729998990643, 38.43205753425005, 73.94154943452172, -82.50396349471022, -67.2915337598837, -84.16333127370189, 33.49023935721271, 98.46498755998081, -157.77553930860472, -304.84461952837165, -8.80493908457625, 198.73551445892195, -64.14796886525872, 82.20742806987782, 83.94415037690746, -14.0332983431221, -344.7712127293756, -53.34916502475176, 49.36496281562519, 67.9238317347546, 79.09558444527846, 293.8206278877744, 24.972777482595244, 41.645861098487394, 346.5042675562142, 105.12939436254786, -243.75717517763255, 312.9493968307692, 18.95745684658438, -85.87703906120355, 332.9193932110683, 236.06669061480704, 76.65503144377604, -370.2720054611249, 54.312839301363375, -194.02587377486958, 14.478250979169623, 69.52388475119031, -116.07094976223033, 197.8524669889777, 251.54720475202333, 334.0085949419451, -104.5026875215765, -387.97797288196347, -110.00534436412367, 159.2332766980302, 52.58214105045768, 1.01576208721962, 55.04879217668744, -136.5502984296647, -146.6394501268159, -119.01527087102733, 13.567765528914672, 133.75724266794865, 139.43576448120416, -272.92651232697165, -19.033689225387732, 56.88701233322153, -12.63857444094365, -154.49525592653325, -147.75719469610658, -40.98364313523157, -42.05566330065853, -65.84382620354057, 361.2447827411276, -75.33535420009783, 101.58004404207954, 180.51537684608493, 96.27354201630291, -242.50509761861946, -27.746756241981657, 47.04030011271099, 149.27821913773585, -17.680960912118472, -1.3711747707306239, 4.977055468164297, -131.74088835351583, 30.957531012803432, -33.63791119102051, -59.1145630223014, -145.80373531310164, -433.91439857088653, 374.2422112791802, 49.18957052948265, 120.06611722885899, -275.16295150756787, 55.54474344622634, 31.65249570325282, -97.11566653546868, 148.15454796189334, -84.26320167118638, 39.40611230621211, -173.94283561702798, 39.94539064828229, 137.09571067744048, -118.09051030747328, -295.7811785330079, 48.77698866667275, -170.63303918859128, -8.559823243597236, 93.222145042335, -41.85873845092592, 258.8589198350342, -144.93112490925355, 176.775711899046, -33.00429411325337, -148.3945047907491, -70.04152195416965, 216.8102790461213, 24.6247768511005, -184.66485549103828, 7.002132140753771, 386.43100126707446, -37.980916586892626, 120.92866158452487, 47.111715144448375, 180.65073187521304, -93.78886181643722, 89.92722593021327, -164.16863072834013, 193.8328343954294, -149.4850774196699, 151.15334283617287, -83.75403955552002, -242.05562992656562, 103.66191089899793, 77.02932696135817, 136.61376618777138, 9.931783737423599, 214.45043984663462, 182.61249226061614, 212.4458324459881, 68.3147189258698, -28.07932041037455, 169.56052497323978, 115.52674239316637, 8.955799197692688, -62.25147771459536, -120.24297174517352, -196.85585016422223, -227.24460619874017, -23.74122859372525, -223.43408955258414, 238.62910499142455, 18.256202189573585, 27.855229799383007, -131.42856373760364, -129.11871102761242, 85.36216720150065, -101.5575952488407, 213.86312490156635, 65.60795870451646, 137.18894471730675, -26.9666509278809, -266.8405349082206, 119.44913504781005, -170.9344799603291, 112.56228516498945, 95.63364682671681, -80.06933358295157, 126.97165661907334, 19.65501407376799, 50.799419381094424, 50.52146577206831, 21.479581164979223, -138.2611420829543, -5.917043602899685, 406.55132207991727, -68.93369755624285, -121.32905023465396, 68.97644131312173, -230.71748684370664, -64.16079035026225, 200.97194339666498, -69.82092071909969, -51.37002159878148, 7.4304930380878975, 30.805465886600036, -180.2153860959354, -127.52824720523941, 175.05149453591352, 137.80707680778295, 9.9875905056484, 77.48994974296309, -185.61962433478092, 108.12066872400408, 13.77145006059929, 173.59654199402593, -346.1354872105187, -387.6883593802144, -65.79589157403687, 94.13677128499755, 81.14952677791102, 392.1003096018544, 329.24182995736084, -38.85667068283332, -4.1655573018565155, -231.6735532750152, 105.45568421656647, 102.89980173609567, -185.3512676666942, 26.251272743757156, -4.044502320036193, -195.54737055352618, -120.01180330510897, -30.41855966275783, 172.51489561773957, 96.94687355485716, 101.54474426337636, 41.18076972402815, 195.61619119358943, 42.80013811272358, -0.1517274541935311, -4.463061649103676, 139.10552749708893, 91.70923462141026, -134.29753065057048, 96.64270820372234, 4.8297896640407565, -39.77385702367877, 78.20011920441577, -102.8665357501431, -93.86476744755817, -11.475540604783113, 58.34607842490118, 114.45940348210388, 79.40600276871507, 67.71976319169883, -48.90320048636744, -72.93157823229036, 72.94636529996446, -62.53282199106426, 304.36022538162695, 160.0429703258499, -156.8177321646846, 59.915978435326124, 65.95771551275668, -12.6449620105858, 117.94148004988868, 13.47587765069609, -57.684989748400696, -85.34956662010815, -13.037274883082121, 84.39573508040951, 18.26902041327655, -70.70357074568972, 82.07089256495227, 18.81100504401512, 158.53930653559442, -40.28161450009987, 23.699745279784196, -57.61327339734968, -12.845807162771267, 229.7392945045012, 231.09271852730785, -71.9474734984831, 31.971222026533045, -37.06433636615798, 1.1649228726603196, 186.5703890986882, 27.587265936850468, 198.1457275030113, -124.26472636605764, 153.02663186532598, -55.262394174009366, 64.1179528178769, -71.12608268801328, 5.695481665519502, -1.0269411720517756, 185.90188797191593, 374.35226196079486, -27.908989345848028, -213.22801363586134, -55.28540750068078, -47.85461790022202, 250.29759684157733, 57.335892370670564, 128.56458166532795, -60.93476728192771, 38.09947839757195, 75.11998413416526, -65.80094516021266, -235.66590229221592, 129.9886209612335, -115.48151256403496, -125.3677906854306, 27.019888101679786, -77.42072224705979, 167.26143245692353, -50.693421616017815, -111.33645028064511, 20.537143177393077, -170.62564645206118, -217.8512365905582, -113.69171835108918, 126.31644763469427, -77.76185233687151, 93.56981783814521, -194.43072729587507, -247.60389046457476, 68.76323550194573, -17.622753999838995, 92.91930985983505, 99.31150217230173, 146.4753773726901, 31.119213601756147, -51.09950712996715, 11.831322909776304, 165.52382498868732, -16.40191255080554, 106.13862794167088, 148.78695697597175, 78.17867725803477, 214.113026375181, 122.53405298395138, 18.4144032569988, 111.6731768209199, -94.05153741579927, 54.80059250828282, 69.1968912998586, 247.93518488485913, 41.40193079604196, -18.204528340839207, -0.3117014073262846, -37.437367669544074, 151.53623327638056, 23.996932398149827, -137.46018589161727, -120.9005283381589, 36.34542701554239, -91.8703488421206, -6.211747281371697, 57.575978516336534, -128.8137603261338, -73.69998172753965, 126.86443064502603, -179.74326060061233, 11.546702589923077, 47.313197864461515, -488.9714462871137, -122.32608537477631, -158.75285398397415, -74.7778767042967, 112.72271912390758, -173.66265018181042, -147.87547598636522, -455.1298494747135, -109.45640200860134, 348.3871208649927, -62.332412965672944, 33.444555928552866, -161.8591977003801, 169.92649323585667, 18.07004809050873, -96.70700807306912, -98.36162220015646, -125.75287537430877, -215.5015870126179, 270.1614583454018, 86.79167908710735, -152.37250678807956, 40.444745926153125, -7.200510013851143, 0.19523052578331235, 221.2629984797292, -55.43936006655508, -110.82030953424115, 214.75626390261849, -3.1240895751167783, 107.30231473884626, -96.82975689397465, 152.54666125074195, -135.37369703197177, -48.418590524522806, 119.08792393666955, -8.903496116493853, -140.3609662929516, 50.398525028210535, 190.66605426990307, 50.18173984821485, -192.9114394509754, -167.68960906926574, 139.64927575817794, -86.89268457551523, -114.62753889951516, -88.8180178803317, -203.38509348329342, -116.80393207793865, 11.418417522353538, -92.12132483405637, -2.1830137547035213, 79.89343863104345, -72.68302718663043, 96.34393730567918, -128.71157784125177, 64.59970421994271, 13.478579753095099, -175.67560435754226, -71.17062851306565, -244.1635359436284, -75.84482404085895, 117.46659263457845, -21.213631387105774, -198.80592793023433, -175.6323327443508, -140.8678311162483, -118.33578774410324, -210.29005552331313, -140.83648016749672, 131.91170805050243, 7.356339988632034, 10.956668207376492, 103.22562724569046, 10.382491388335604, -45.110924296700375, -105.51708148892034, -125.38579855150032, 63.721009618653824, -60.00097854745177, 251.73325840875248, 26.079577097995013, -14.041672473575254, 445.58376315020683, 40.40380163519218, 129.44534379157125, 6.983346883842465, 198.66041908049036, -53.7148634632484, 127.88940729152708, 239.32756869695672, 132.11531295749177, -44.523353024040176, -104.35109864038321, -225.00453265676242, -45.495045589620005, 109.83480546336624, 93.7322603168802, -65.68704033807182, -52.997457423298336, 28.90433573998854, -50.786116637783195, -35.75249040766831, -100.77281373246532, -107.08140200657063, -168.94029300234172, 67.73023916888582, 81.30845460815219, -116.3903047950987, 104.84346999242514, 233.87377084315395, 19.236863690681464, 134.00675742164145, 7.620784376450605, -28.2834174186542, 177.38707001388147, 68.72644538258815, -2.8224442449820994, 35.252557879238786, 269.85576931183715, -13.604057883142382, -226.1285443437234, 14.034877693696066, -312.79303385519705, 51.069171238122024, -60.68334566056357, -205.12091772912257, -163.2468268800492, -144.17190393133748, 174.81040933815456, -263.4833649319541, 171.96175060586404, -183.8079715619574, -131.7101032826196, 10.589886558250221, -429.0413979335934, -134.4443447822571, -196.8935546990101, 49.21816187859798, 121.96677642562834, 157.3656293660826, 132.95483123051542, -9.594228638145223, 74.75382016917007, -4.346191052105356, 102.35443581644597, 54.54188070852261, -180.89475079822682, -46.86870623770446, 66.4943303109803, 163.16994479449062, -31.27254481748368, -81.34747475682961, 80.46934340813344, 57.690679227399706, 18.651454394512353, 90.79389056907621, 1.4771765554682252, -205.78963662700033, 192.26423601626772, -95.52862577275825, 159.06009956067962, 44.93569694315704, -39.31839826698371, -72.2551913597899, -212.9644444941977, -158.45247526464019, -174.02447318070725, 104.31306710575622, 133.2015175070973, 46.415170094419125, -161.78635906061203, 256.69921324088205, 86.7094043679504, -11.790985845755504, -93.13435844385684, 125.28007031629217, 239.4399071208505, 25.336660359256612, 71.51486685385811, -95.0663346091536, -133.93851642100412, -78.72513827922174, 111.46723452709945, 26.155815063607736, 202.1670186896088, -145.80525117415584, 48.47715835319055, 267.50398575709494, 230.71372957205026, -142.14315101789742, -211.07740767207383, -8.733622978686604, -29.36503452700022, 49.80753992885177, 38.90730196825585, 3.821672573845178, -130.93565764192365, -54.664692863235885, -64.8566700148823, -56.8045053195151, -75.1830253507855, -12.812565797890091, 0.2912920033874077, 65.67288392151383, 157.8131438324992, -164.77441220243884, -199.39020619263098, -56.051752649105644, 113.78958068605617, -120.6975450382433, 248.9223393041105, 207.26773938271162, 221.93058412775127, 131.6703782447502, -30.203113605708605, 276.20965817557976, -117.06258136612728, -141.91601137541633, 116.00918255511961, -99.36624790391673, -94.5321417184885, -8.00478781020362, 72.59016341517864, 47.73828193554228, 243.16860532837597, 232.07866557890384, -131.68053993363174, -160.07086133054716, -233.0048086172637, -235.04964617468787, 83.82942184629113, -64.6598709264377, 117.5568678861607, 66.41282780799105, 115.48599235732196, -33.04011000520813, 36.19066609701661, 110.9587421203287, -196.1910242231541, 289.72960801688686, -22.28473776128601, 10.606386253093147, -92.89536271195735, -11.944716461351659, -110.00537076297235, 59.18064129088576, -250.8227575622738, -0.41507392433655677, 142.4244933006211, 15.67763454499155, -97.14166027501098, 61.78525557961819, 16.7773373014866, 3.1761368506163934, -140.6975641317421, -29.667498184569958, 29.664254281312097, 26.30008816867301, 78.63678339545815, 26.384311303577928, -192.860203141571, -55.385552514834195, -175.6402247425642, 12.047156053811785, 49.83307101276764, -63.118297617665824, 133.05568749848908, -32.9071743916755, -81.09764802208905, 43.84818595774847, 66.99903544936879, 52.585749963155536, 151.00707478299174, -20.305215655005956, -212.6836408432762, -26.15740735514864, 22.581510321636266, -68.03957867338029, 58.52040685486525, 8.098552115144253, 15.984095022307095, 94.9516007883373, -94.82803201910693, 42.319074469441254, 59.90791673125507, 25.950331792644345, -66.86188840592847, 48.65170808604492, 348.2366424824899, -295.0927413371939, 102.04166556570613, 254.34945443282987, 128.32296057243875, -13.159821897217158, 104.39734888367386, 42.761640698393606, 94.84133069144269, -14.288178707350593, -233.2869107995426, 85.11919661460252, -45.384674660350015, -95.81243672151768, -111.01124663693032, 285.98810751041367, 85.15265415030885, -63.560261803455084, -23.488957795025506, 45.50740447318448, -177.9077919659052, 46.19288002897565, 161.56180954599557, -52.367709664152116, -26.915838041658574, -192.89401559907475, 327.65483365189647, -13.755136486899554, -51.514331022489536, -201.5498424638442, 116.25219723957272, -26.70687084992064, -139.12056758829698, -17.319141742457425, -267.03738444801866, -148.39108618129654, -273.23829544542275, 6.370506014279653, 387.2354350418817, -58.26279528550682, 74.17830483521392, 68.10894458002171, -224.5218951233551, -263.12285042256974, 204.55046821206082, -36.533927532936275, -210.67013774269154, -218.9111057627198, -231.36675563066512, 57.45974103622166, 8.873884604772295, -510.7980412076616, -19.27532935922641, 78.34680125372911, 55.643327417029724, 92.84124249528145, 97.37378742985196, 106.3191900255903, 169.7451905054863, -147.98336133908435, -200.381525095382, -45.981706233290005, -107.01231522143863, -52.253852451728804, 120.94905835643557, -2.6064124311902184, -151.12516815517938, -19.186936988488238, 123.61130170123954, -134.43281659299873, 132.0470715075764, -287.53337235910465, 173.11969324996258, 108.54751101260909, -125.08310823619149, 36.128328360850155, -239.95370014885748, -9.739179778516712, 38.552587337192655, 125.13718801453236, -48.63762203861138, -26.359068422159528, -240.12853045998284, 18.884107633475015, -10.558550442219945, -43.70899636694075, -178.43565991104205, 11.40210827587736, -18.49973025157227, 82.14303080691955, -55.63566772160104, 34.07507700343475, 65.73338465113862, 190.09162427579102, -128.4084211874847, -26.38126635162319, 303.5917190268661, 157.52795224066796, 78.264331930557, -108.7570844423724, -3.894697478807687, 25.119777551311202, -38.371032888482766, 237.75612992486953, 326.5627384751918, -57.93860658224044, -160.23861029291706, -44.9922366158132, -75.05329979217024, -12.78940437951886, -1.650135506209895, -10.190513290249902, 72.16427791720166, 59.889636057626, 152.37464602205958, 55.86382479842878, 19.15662393719927, -24.392445034022543, 217.81115266009948, -103.33625775530544, 102.29840742563488, 103.43481058315548, -46.261424691717934, 64.56804725343972, -157.0257235593701, 181.3524021311388, -114.91666123431557, -44.915155959154994, 233.83178102872418, 36.91215001452077, 25.749965166568593, 250.2126025762757, 318.4649956468566, 55.971573291469866, -26.70341290034935, -16.741128330873465, 118.07802728329615, 135.1315301332939, -163.82345286911846, -236.00838580984257, 54.97565180352121, -139.8067897549001, 199.66815131321306, 112.80582694230151});

        Grid<? extends SensingVoxel> body = RobotUtils.buildSensorizingFunction("spinedTouch-t-f-0").apply(RobotUtils.buildShape("biped-7x4"));
        //simple
        double f = 1d;
        Robot<ControllableVoxel> phasesRobot = new Robot<>(
                new TimeFunctions(Grid.create(
                        body.getW(),
                        body.getH(),
                        (final Integer x, final Integer y) -> (Double t) -> Math.sin(-2 * Math.PI * f * t + Math.PI * ((double) x / (double) body.getW()))
                )),
                SerializationUtils.clone(body)
        );
        //distribute sensing
        Random random = new Random();
        DistributedSensing distributedSensing = new DistributedSensing(body, 1);
        for (Grid.Entry<? extends SensingVoxel> entry : body) {
            MultiLayerPerceptron mlp = new MultiLayerPerceptron(
                    MultiLayerPerceptron.ActivationFunction.TANH,
                    distributedSensing.nOfInputs(entry.getX(), entry.getY()),
                    new int[]{2},
                    distributedSensing.nOfOutputs(entry.getX(), entry.getY())
            );
            double[] ws = mlp.getParams();
            IntStream.range(0, ws.length).forEach(i -> ws[i] = random.nextDouble() * 2d - 1d);
            mlp.setParams(ws);
            distributedSensing.getFunctions().set(entry.getX(), entry.getY(), mlp);
        }
        Robot<SensingVoxel> distHetero = new Robot<>(
                distributedSensing,
                SerializationUtils.clone(body)
        );
        //centralized sensing
        CentralizedSensing centralizedSensing = new CentralizedSensing(body);
        int nOfWeights = HebbianPerceptronFullModel.countHebbCoef(centralizedSensing.nOfInputs(),
                new int[]{centralizedSensing.nOfInputs()},
                centralizedSensing.nOfOutputs());
        double[] hc = new double[nOfWeights];
        IntStream.range(0, hc.length).forEach(i -> hc[i] = random.nextDouble() * 2d - 1d);
        HebbianPerceptronFullModel mlp = new HebbianPerceptronFullModel(
                HebbianPerceptronFullModel.ActivationFunction.TANH,
                centralizedSensing.nOfInputs(),
                new int[]{centralizedSensing.nOfInputs()},
                centralizedSensing.nOfOutputs(),
                hc,
                0.01,
                new Random(0),
                new HashSet<>(),
                new HashMap<>(),
                null

        );
        System.out.println(mlp);
        centralizedSensing.setFunction(mlp);
        Robot<SensingVoxel> centralized = new Robot<>(
                centralizedSensing,
                SerializationUtils.clone(body)
        );
        //episode
        Locomotion locomotion = new Locomotion(
                30,
                Locomotion.createTerrain("steppy-3-10-0"),
                new Settings()
        );
        System.out.println("ehi");
        Grid<Pair<String, Robot<?>>> namedSolutionGrid = Grid.create(1, 1);
        //namedSolutionGrid.set(0, 0, Pair.of("dist-hetero", distHetero));
        namedSolutionGrid.set(0, 0, Pair.of("centralized", centralized));
        //namedSolutionGrid.set(2, 0, Pair.of("phasesRobot", phasesRobot));
        //GridOnlineViewer.run(locomotion, namedSolutionGrid);
        Function<String, Drawer> drawerSupplier = s -> Drawer.of(
                Drawer.clip(
                        BoundingBox.build(0d, 0d, 1d, 0.5d),
                        Drawers.basicWithMiniWorld(s)
                ),
                Drawer.clip(
                        BoundingBox.build(0d, 0.5d, 1d, 1d),
                        Drawer.of(
                                Drawer.clear(),
                                new MLPDrawer(SubtreeDrawer.Extractor.matches(MLPState.class, null, null), 15d, EnumSet.allOf(MLPDrawer.Part.class))
                        )
                )
        );
        //GridOnlineViewer.run(locomotion, namedSolutionGrid, drawerSupplier);
        //GridOnlineViewer.run(locomotion, Grid.create(1, 1, Pair.of("", centralized)), drawerSupplier);
        System.out.println("ohi");
        try {
            GridFileWriter.save(
                    locomotion,
                    Grid.create(1, 1, Pair.of("", centralized)),
                    800, 800, 1, 24,
                    VideoUtils.EncoderFacility.JCODEC,
                    new File("./biped-hmlp.mp4"),
                    drawerSupplier
            );
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    private static void multiped() {
        double f = 1d;
        Grid<Boolean> body = Grid.create(7, 2, (x, y) -> y == 1 || (x % 2 == 0));
        Robot<?> robot = new Robot<>(
                new TimeFunctions(Grid.create(
                        body.getW(),
                        body.getH(),
                        (final Integer x, final Integer y) -> (Double t) -> Math.sin(
                                -2 * Math.PI * f * t + 2 * Math.PI * ((double) x / (double) body.getW()) + Math.PI * ((double) y / (double) body.getH())
                        )
                )),
                RobotUtils.buildSensorizingFunction("uniform-a-0.01").apply(body)
        );
        Locomotion locomotion = new Locomotion(
                10,
                Locomotion.createTerrain("hilly-0.3-1-0"),
                new Settings()
        );
        GridOnlineViewer.run(locomotion, robot);
        FramesImageBuilder framesImageBuilder = new FramesImageBuilder(5, 7, .75, 300, 200, FramesImageBuilder.Direction.HORIZONTAL, Drawers.basic());
        locomotion.apply(robot, framesImageBuilder);
        try {
            ImageIO.write(framesImageBuilder.getImage(), "png", new File("/home/eric/frames-multiped.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static void breakingWorm() {
        Grid<? extends SensingVoxel> body = RobotUtils.buildSensorizingFunction("spinedTouch-f-t-0").apply(RobotUtils.buildShape("worm-4x3"));
        double f = 1d;
        Robot<ControllableVoxel> unbreakableRobot = new Robot<>(
                new TimeFunctions(Grid.create(
                        body.getW(),
                        body.getH(),
                        (final Integer x, final Integer y) -> (Double t) -> Math.sin(-2 * Math.PI * f * t + Math.PI * ((double) x / (double) body.getW()))
                )),
                body
        );
        Robot<?> breakableRobot = RobotUtils.buildRobotTransformation(
                "breakable-area-1000/500-3/0.5-0",
                new Random(0)
        ).apply(SerializationUtils.clone(unbreakableRobot));
        //episode
        Locomotion locomotion = new Locomotion(
                60,
                Locomotion.createTerrain("hilly-0.5-5-0"),
                new Settings()
        );
        Grid<Pair<String, Robot<?>>> namedSolutionGrid = Grid.create(1, 2);
        namedSolutionGrid.set(0, 0, Pair.of("unbreakable", unbreakableRobot));
        namedSolutionGrid.set(0, 1, Pair.of("breakable", breakableRobot));
        GridOnlineViewer.run(locomotion, namedSolutionGrid);
    }

    private static void plainWorm() {
        Grid<? extends SensingVoxel> body = RobotUtils
                //.buildSensorizingFunction("uniform-l1-0.01")
                //.buildSensorizingFunction("uniform-l5-0")
                .buildSensorizingFunction("uniform-l5+vxy+t-0.01")
                .apply(RobotUtils.buildShape("worm-5x2"));
        double f = 1d;
        Robot<?> robot = new Robot<>(
                new TimeFunctions(Grid.create(
                        body.getW(),
                        body.getH(),
                        (final Integer x, final Integer y) -> (Double t) -> Math.sin(
                                -2 * Math.PI * f * t + 2 * Math.PI * ((double) x / (double) body.getW()) + Math.PI * ((double) y / (double) body.getH())
                        )
                        //(x, y) -> t -> Math.signum(Math.sin(-2 * Math.PI * (f + (x > body.getW() / 2d ? 1 : 0)) * t))
                )),
                SerializationUtils.clone(body)
        );
        robot = RobotUtils.buildRobotTransformation("broken-0.0-0", new Random(0)).apply(robot);
        //episode
        Locomotion locomotion = new Locomotion(
                30,
                Locomotion.createTerrain("flatWithStart-2"),
                new Settings()
        );
        GridOnlineViewer.run(locomotion, robot);
    }

    private static void cShaped() {
        Grid<Boolean> shape = Grid.create(8, 8, (x, y) -> x < 2 || y < 2 || y >= 6);
        Grid<? extends SensingVoxel> body = RobotUtils.buildSensorizingFunction("uniform-t+vxy-0.05").apply(shape);
        Robot<?> robot = new Robot<>(
                new CentralizedSensing(body),
                SerializationUtils.clone(body)
        );
        //episode
        Locomotion locomotion = new Locomotion(
                20,
                Locomotion.createTerrain("flatWithStart-2"),
                new Settings()
        );
        //GridOnlineViewer.run(locomotion, robot);
        try {
            GridFileWriter.save(locomotion, robot, 600, 400, 0, 25, VideoUtils.EncoderFacility.FFMPEG_SMALL, new File("/home/eric/cshaped.mp4"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        GridOnlineViewer.run(locomotion, robot);
    }

    private static void rollingOne() {
        //one voxel robot
        Grid<SensingVoxel> oneBody = Grid.create(1, 1, new SensingVoxel(List.of(
                new Velocity(true, 8d, Velocity.Axis.X, Velocity.Axis.Y),
                new Trend(new Velocity(true, 4d, Velocity.Axis.X, Velocity.Axis.Y), 0.25),
                new Angle(),
                new Lidar(10, Map.of(Lidar.Side.E, 4))
        )));
        Robot<SensingVoxel> robot = new Robot<>(
                new CentralizedSensing(oneBody, RealFunction.build(in -> new double[]{0d}, 1, 1)),
                oneBody
        );
        //episode
        Locomotion locomotion = new Locomotion(
                60,
                new double[][]{new double[]{0, 10, 30, 31, 100, 1000, 1010}, new double[]{100, 100, 80, 10, 10, 0, 100}},
                new Settings()
        );
        GridOnlineViewer.run(locomotion, robot);
    }

    private static void rollingBall() {
        Random random = new Random();
        Grid<Boolean> shape = RobotUtils.buildShape("ball-7");
        Grid<? extends SensingVoxel> body = RobotUtils.buildSensorizingFunction("uniform-ax+t+r-0").apply(shape);
        //centralized sensing
        CentralizedSensing centralizedSensing = new CentralizedSensing(body);
        MultiLayerPerceptron mlp = new MultiLayerPerceptron(
                MultiLayerPerceptron.ActivationFunction.TANH,
                centralizedSensing.nOfInputs(),
                new int[0],
                centralizedSensing.nOfOutputs()
        );
        double[] ws = mlp.getParams();
        IntStream.range(0, ws.length).forEach(i -> ws[i] = random.nextGaussian());
        mlp.setParams(ws);
        centralizedSensing.setFunction(mlp);
        Robot<SensingVoxel> robot = new Robot<>(
                centralizedSensing,
                SerializationUtils.clone(body)
        );
        //episode
        Locomotion locomotion = new Locomotion(
                20,
                Locomotion.createTerrain("downhill-30"),
                new Settings()
        );
        Function<String, Drawer> drawerSupplier = s -> Drawer.of(
                Drawer.clip(
                        BoundingBox.build(0d, 0d, 1d, 0.5d),
                        Drawers.basicWithMiniWorld(s)
                ),
                Drawer.clip(
                        BoundingBox.build(0d, 0.5d, 1d, 1d),
                        new StackedScopedReadingsDrawer(SubtreeDrawer.Extractor.matches(StackedScopedReadings.class, null, null), 10d)
                )
        );
        GridOnlineViewer.run(
                locomotion,
                Grid.create(1, 1, Pair.of("", robot)),
                drawerSupplier
        );
        try {
            GridFileWriter.save(
                    locomotion,
                    Grid.create(1, 1, Pair.of("", robot)),
                    600, 600,
                    0, 30,
                    VideoUtils.EncoderFacility.FFMPEG_SMALL, new File("/home/eric/ball-w-activity.mp4"),
                    drawerSupplier
            );
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

}
